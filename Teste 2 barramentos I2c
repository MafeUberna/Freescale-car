
#include "AS5600.h"
#include "Wire.h"
//  select right class.
AS5600 as5600;   //  use default Wire
//AS5600L as5600;   //  use default Wire

// Criando dois objetos I2C
TwoWire I2C_1 = TwoWire(0);
TwoWire I2C_2 = TwoWire(1);

// Definição dos pinos para cada barramento
#define SDA_1 21 // alterar os valores
#define SCL_1 22

#define SDA_2 25
#define SCL_2 26

void setup()
{
  Serial.begin(115200);
  Serial.println(__FILE__);
  Serial.print("AS5600_LIB_VERSION: ");
  Serial.println(AS5600_LIB_VERSION);
  // Inicializando os dois barramentos I2C
  I2C_1.begin(SDA_1, SCL_1, 100000); //conferir a frequencia
  I2C_2.begin(SDA_2, SCL_2, 100000);


  as5600.begin(4);  //  set direction pin.
  as5600.setDirection(AS5600_CLOCK_WISE);  //  default, just be explicit.

  Serial.println(as5600.getAddress());

  //  as5600.setAddress(0x40);  //  AS5600L only

  int b = as5600.isConnected();
  Serial.print("Connect: ");
  Serial.println(b);

  delay(1000);
}


void loop()
{
  static uint32_t lastTime = 0;

  //  set initial position
  as5600.getCumulativePosition();

  //  update every 100 ms
  //  should be enough up to ~200 RPM
  if (millis() - lastTime >= 100)
  {
    lastTime = millis();
    Serial.print(as5600.getCumulativePosition());
    Serial.print("\t");
    Serial.println(as5600.getRevolutions());
  }

  //  just to show how reset can be used
  if (as5600.getRevolutions() >= 10)
  {
    as5600.resetPosition();
  }
}

